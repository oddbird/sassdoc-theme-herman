// Herman Utilities
// ================


// Json
// ----
$json: ();


// String Replace
// --------------
/// Return a string, with a substring replaced
/// @group utility
/// @access private
@function str-replace(
  $string,
  $old,
  $new: null,
  $replace-all: false
) {
  $return: $string;
  $i: str-index($string, $old);
  $n: str-length($old);

  @if $string == $old {
    $return: $new;
  } @else if $i {
    $a: if($i > 1, str-slice($string, 1, $i - 1), '');
    $z: str-slice($string, $i + $n);

    @if $replace-all {
      $z: str-replace($z, $old, $new, true);
    }

    $return: $a + if($new, $new, '') + $z;
  }

  @return $return;
}


// Herman Inspect
// --------------
@function herman-inspect(
  $value
) {
  $value: inspect($value);

  @if str-index($value, '.') == 1 {
    $value: '0' + $value;
  }

  @if str-index($value, '"') {
    $value: str-replace($value, '"', '\\"', true);
  }

  @return $value;
}


// Map Compile
// -----------
/// Get output values from a sass map,
/// using any function for compilation.
/// @access private
@function herman-map-compile(
  $map,
  $function,
  $inspect: true
) {
  $output: ();

  @each $name, $value in $map {
    @if function-exists($function) {
      $value: call($function, $name);
    }

    @if $inspect {
      $value: herman-inspect($value);
    }

    $output: map-merge($output, ($name: $value));
  }

  @return $output;
}


// Herman Add Color
// ----------------
@mixin herman-add-color(
  $name,
  $map,
  $function: 'color'
) {
  $colors: map-merge($colors, $map) !global;
  $expanded: ();

  @if $function {
    $map: herman-map-compile($map, $function, false);
  }

  @each $key, $value in $map {
    $r: herman-inspect(round(red($value)));
    $g: herman-inspect(round(green($value)));
    $b: herman-inspect(round(blue($value)));
    $h: herman-inspect(round(hue($value)));
    $s: herman-inspect(round(saturation($value)));
    $l: herman-inspect(round(lightness($value)));
    $a: herman-inspect(alpha($value));

    $map: (
      'output': herman-inspect($value),
      'rgba': 'rgba(#{$r}, #{$g}, #{$b}, #{$a})',
      'hsla': 'hsla(#{$h}, #{$s}, #{$l}, #{$a})',
    );

    $expanded: map-merge($expanded, ($key: $map));
  }

  $json: map-merge($json, ($name: $expanded)) !global;
}


// Herman Add Sizes
// ----------------
@mixin herman-add-sizes(
  $name,
  $map,
  $function: 'size'
) {
  $sizes: map-merge($sizes, $map) !global;

  @if $function {
    $map: herman-map-compile($map, $function);
  }

  $json: map-merge($json, ($name: $map)) !global;
}


// Herman Ratios
// -------------
@mixin herman-add-ratios(
  $name,
  $map
) {
  $ratios: map-merge($ratios, $map) !global;
  $json: map-merge($json, ($name: $map)) !global;
}


// Herman Add Font
// ---------------
@mixin herman-add-font(
  $name,
  $map
) {
  $new: ($name: $map);
  $fonts: map-merge($fonts, $new) !global;
  $json: map-merge($json, $new) !global;
}
