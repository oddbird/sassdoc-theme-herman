// Accoutrement Utils
// ==================


/// # Herman Config: Private Helpers
/// @group config-utils


// Config
// ------
/// Internal utility for managing Herman and Accoutrement maps
/// in one single mixin.
/// In preparation for the Sass 3.5+ modular syntax,
/// this can only be done in the project being documented,
/// and is not included as part of the Herman API.
///
/// @group config-utils
/// @link http://oddbird.net/accoutrement-color Accoutrement-Color
/// @link http://oddbird.net/accoutrement-type Accoutrement-Type
/// @link http://oddbird.net/accoutrement-scale Accoutrement-Scale
///
/// @param {string} $type -
///   The type of data being added, e.g.
///   `color/s`, `font/s`, `ratio/s`, `size/s`.
/// @param {string} $name -
///   The reference key for accessing this data.
///   This should generally be the same as the variable name --
///   e.g. `'brand-colors'` for the `$brand-colors` variable.
/// @param {map} $value -
///   The map data to be added to both
///   Accoutrement globals and Herman export.
///
/// @example scss
///   $brand-colors: (
///     'brand-orange': hsl(24, 100%, 39%),
///     'brand-blue': hsl(195, 85%, 35%),
///     'brand-pink': hsl(330, 85%, 48%) ('shade': 25%),
///   );
///
///   @include config('colors', 'brand-colors', $brand-colors);
@mixin config(
  $type,
  $name,
  $value
) {
  @if index('color' 'colors', $type) {
    @include add-colors($value);
    @include herman-add($type, $name, $value, 'color');
  } @else if index('size' 'sizes', $type) {
    $sizes: map-merge($sizes, $value) !global;
    @include herman-add($type, $name, $value, 'size');
  } @else if index('ratio' 'ratios', $type) {
    $ratios: map-merge($ratios, $value) !global;
    @include herman-add($type, $name, $value, 'ratio');
  } @else if index('font' 'fonts', $type) {
    @include add-font($name, $value);
    @include herman-add($type, $name, $value);
  }
}


// Set Variables
// -------------
@mixin set-variables(
  $map,
  $function,
  $prefix: $function
) {
  @each $key, $value in $map {
    $var: '--#{$prefix}-#{$key}';

    @if $function {
      $value: call($function, $value);
    } @else {
      $var-value: unquote('--#{$prefix}-#{$value}');
      $value: var($var-value);
    }

    #{$var}: $value;
  }
}
