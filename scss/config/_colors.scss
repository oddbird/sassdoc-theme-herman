// Color Settings
// ==============


/// # Herman Config: Color Palettes
/// This page contains documentation of the colors used by Herman.
/// We use OddBird's [Accoutrement-Color][ac] module
/// to store and manage colors directly in Sass map objects.
///
/// [ac]: http://oddbird.net/accoutrement-color/
///
/// For help documenting your brand colors,
/// see the "[Documenting Colors][colors]" page.
///
/// [colors]: demo_colors.html
/// @group config-colors
/// @link http://oddbird.net/accoutrement-color/docs/
///   Accoutrement Color


// Brand Colors
// ------------
/// We use bright primary colors for the main brand,
/// everything else is based on these colors.
/// These are based on the OddBird brand colors,
/// but using a darker shade of the OddBird pink.
///
/// These colors should be assigned to semantic theme-specific names
/// before they are used in styling patterns and components.
///
/// @colors
/// @group config-colors
///
/// @type map
/// @prop {Color | String | List} '<color-name>' -
///   Each `<color-name>` key can be assigned a color
///   or previously-defined key,
///   followed by an optional map of adjustments
///   (as defined in
///   [Accoutrement-Color](http://oddbird.net/accoutrement-color/docs/)).
$brand-colors: (
  'brand-orange': hsl(24, 100%, 39%),
  'brand-blue': hsl(195, 85%, 35%),
  'brand-pink': hsl(330, 85%, 48%) ('shade': 25%),
);

@include config('colors', 'brand-colors', $brand-colors);



// Neutral Colors
// --------------
/// Use these neutral colors
/// to create structure and hierarchy in the document.
/// These colors should be assigned to semantic theme-specific names
/// before they are used in styling patterns and components.
///
/// @colors
/// @group config-colors
$neutral-colors: (
  'light-gray': 'brand-blue' ('tint': 80%, 'desaturate': 80%),
  'gray': 'brand-blue' ('desaturate': 80%),
  'black': 'brand-blue' ('shade': 30%, 'desaturate': 80%),
);

@include config('colors', 'neutral-colors', $neutral-colors);



// Theme Colors
// ------------
/// Rather than directly accessing and adjusting
/// the explicitly named (e.g. "pink" or "gray")
/// brand and neutral colors,
/// we assign them to semantic theme-specific names.
/// These are the colors that should be used
/// in our pattern/component styles.
///
/// @colors
/// @group config-colors
$theme-colors: (
  'theme-dark': 'brand-blue',
  'theme-light': 'brand-blue' ('tint': 80%),
  'contrast-light': #fff,
  'contrast-low': 'gray',
  'contrast-dark': 'black',
  'accent-dark': 'brand-pink',
  'accent-light': 'accent-dark' ('tint': 75%),
);

@include config('colors', 'theme-colors', $theme-colors);


// Dynamic Colors
// --------------
/// These theme-colors are based on the primary theme colors,
/// and change based on project-specific theme-color settings.
///
/// @colors
/// @group config-colors
$dynamic-colors: (
  'background': 'contrast-light',
  'text': 'contrast-dark',
  'text-light': 'contrast-low',

  'sidebar-background': 'theme-dark',
  'sidebar-text': 'contrast-light',

  'action': 'accent-dark',
  'focus': 'theme-dark',
  'underline': 'accent-light',

  'border': 'callout',
  'callout': 'theme-light',
  'callout-text': 'text',
);

@include config('colors', 'dynamic-colors', $dynamic-colors);


// Static Colors
// -------------
/// These theme-colors are based on the neutral tones,
/// and don't change in relation to project-specific
/// theme-color settings.
///
/// @colors
/// @group config-colors
$static-colors: (
  'code': 'theme-dark',
  'code-background': 'theme-light' ('tint': 90%),
  'shadow': 'contrast-dark' ('rgba': 0.25),
);

@include config('colors', 'static-colors', $static-colors);
