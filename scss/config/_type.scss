// Typography Config
// =================


/// ## macro `link_if()`
/// This Nunjucks utility macro returns either
/// an anchor tag, or span, depending on
/// the truthyness of the `url` argument.
///
/// - `content` :: {`string`}<br/>
///   The text/html contents of the link.
/// - `url=none` :: {`string` | `none`}<br/>
///   The link-target URL, if any is available.
///   When there is no URL provided, we return a span.
/// - `attrs={}` :: {`dictionary`}<br/>
///   A dictionary of arbitrary html attributes
///   to include on the returned link or span.
///
/// @group config-utils
///
/// @example njk
///   {% import 'utility.macros.njk' as utility %}
///   {{ utility.link_if(content='stacy', url='#', attrs={'data-sassdoc': 'font-name'} ) }}
///   {{ utility.link_if(content='not stacy', url=none) }}


// Link
// ----
/// Shortcut for `link` and `visited` pseudo-classes.
/// @group config-utils
/// @example scss
///   a {
///     #{$link} {
///       color: blue;
///     }
///   }
$link: '&:link, &:visited';


// Focus
// -----
/// Shortcut for `hover`, `focus`, and `active` pseudo-classes.
/// @group config-utils
/// @example scss
///   a {
///     #{$focus} {
///       color: red;
///     }
///   }
$focus: '&:hover, &:focus, &:active';


// Invert Colors
// -------------
/// Invert the colors of a block, creating light-on-dark text and links.
/// @group config-utils
/// @example scss
///   .invert-colors {
///     @include invert-colors;
///   }
/// @example html
///   <div class="invert-colors" style="padding: 1em;">
///     You shall sojourn at <a href="#">Paris, Rome, and Naples</a>.
///   </div>
@mixin invert-colors {
  background-color: color('sidebar-background');
  background-color: var(--color-sidebar-background, color('sidebar-background')); //sass-lint:disable-line no-duplicate-properties
  color: color('sidebar-text');
  color: var(--color-sidebar-text, color('sidebar-text')); //sass-lint:disable-line no-duplicate-properties

  [href] {
    #{$link} {
      color: inherit;
    }
  }

  input {
    border-color: currentColor;
    color: currentColor;
  }
}
